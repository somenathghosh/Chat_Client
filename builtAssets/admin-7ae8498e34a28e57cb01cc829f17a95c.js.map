)]}'
{"version":3,"sources":["public/js/admin.js"],"names":[],"mappingssourcesContent":["// To-do\n// Add scroll to load more messages for Admins\n\n// Initialize variables\nvar $window = $(window);\nvar $newUser = $('#windowSound')[0];\nvar $newChat = $('#chatSound')[0];\nvar $pokeAdmin = $('#pokeSound')[0];\nvar $usernameInput = $('.usernameInput'); // Input for username\nvar $passwordInput = $('.passwordInput'); //Input for password\nvar $loginPage = $('.login.page'); // The login page\nvar $errorPage = $('.error.page'); // The error page\nvar $chatPage = $('.chat.page'); // The chat page\nvar $userList = $('.adminList'); // List of online admins\nvar $inputMessage; // Input message input box\nvar $messages; // Messages area\n\nvar username;\t//Store admin username\nvar authenticated = false; //Boolean to check if admin is authenticated\nvar connected = false;\nvar typing = false; //Boolean to check if admin is typing\nvar timeout = undefined; //Timeout to monitor typing\nvar socket = io({transports: ['websocket']}); //io socket\n$newUser.loop = true;\n$usernameInput.focus();\nNotification.requestPermission();\n\nlet _user = JSON.parse(sessionStorage.getItem('user'));\nconsole.log('from admin js', _user);\n\nsocket.on('login', function(data) {\n\t$userList.empty();\n\tauthenticated = data.login;\n\tif (authenticated) {\n\t\t$loginPage.fadeOut();\n\t\t$chatPage.show();\n\t\tconsole.log('100');\n\t\tsocket.emit('add admin', {\n\t\t\tadmin: username,\n\t\t\tisAdmin: true\n\t\t});\n\t\t$userList.append('<li id=' + username + '>' + username + '</li>');\n\t\tconnected = true;\n\t} else {\n\t\talert(data.err);\n\t\t$usernameInput.val('');\n\t\t$passwordInput.val('');\n\t\tusername = null;\n\t\t$usernameInput.focus();\n\t}\n})\n\nsocket.on('chat message', function(data) {\n\tconsole.log('200');\n\t$inputMessage = $('#' + data.roomID);\n\tvar $parent = $inputMessage.parent();\n\tvar $messages = $parent.children(\".messages\");\n\tif (data.isAdmin)\n\t\tvar $usernameDiv = $('<span class=\"username\"/>').text(\"CronJ\");\n\telse\n\t\tvar $usernameDiv = $('<span class=\"username\"/>').text(\"Client\");\n\n\tvar $messageBodyDiv = $('<span class=\"messageBody\">').text(data.msg);\n\tvar $timestampDiv = $('<span class=\"timestamp\">').text((data.timestamp).toLocaleString().substr(15, 6));\n\tvar $messageDiv = $('<li class=\"message\"/>').append($usernameDiv, $messageBodyDiv, $timestampDiv);\n\t$messages.append($messageDiv);\n\t$messages[0].scrollTop = $messages[0].scrollHeight;\n\t$newChat.play();\n});\n\nsocket.on('admin added', function(username) {\n\tconsole.log('300');\n\t$userList.append('<li id=' + username + '>' + username + '</li>');\n\tadminListListener(username);\n})\n\nsocket.on('admin removed', function(username) {\n\tconsole.log('500');\n\t$('#' + username).remove();\n})\n\nsocket.on('New Client', function(data) {\n\tconsole.log('400');\n\t$('.container').append(getChatArea(data.roomID));\n\t$inputMessage = $('#' + data.roomID);\n\tvar $parent = $inputMessage.parent();\n\tvar $messages = $parent.children(\".messages\");\n\tvar $chatHeader = $parent.children(\".chatHeader\");\n\tvar len = data.history.length;\n\t$chatHeader.append(data.details[0] + \" , \" + data.details[1] + \" , \" + data.details[2]);\n\tvar sender;\n\tfor (var i = len - 1; i >= 0; i--) {\n\t\tif (data[\"history\"][i][\"who\"])\n\t\t\tsender = \"You\"\n\t\telse\n\t\t\tsender = \"Client\"\n\t\tvar $usernameDiv = $('<span class=\"username\"/>').text(sender);\n\t\tvar $messageBodyDiv = $('<span class=\"messageBody\">').text(data[\"history\"][i][\"what\"]);\n\t\tvar $timestampDiv = $('<span class=\"timestamp\">').text((data[\"history\"][i][\"when\"]).toLocaleString().substr(15, 6));\n\t\tvar $messageDiv = $('<li class=\"message\"/>').append($usernameDiv, $messageBodyDiv, $timestampDiv);\n\t\t$messages.append($messageDiv);\n\t\t$messages[0].scrollTop = $messages[0].scrollHeight;\n\t}\n\tif (!data.justJoined) {\n\t\t$newUser.play();\n\t\tnotifyAdmin(\"New Client\", \"Hey there!\" + data.details[0] + \" needs help!\");\n\t\t$parent.css('border', '2px solid red')\n\t\t$inputMessage = $('#' + data.roomID);\n\t\t$inputMessage.on(\"focus\", function() {\n\t\t\t$newUser.pause();\n\t\t\t$parent.css('border', '1px solid black')\n\t\t\t$inputMessage.off('focus');\n\t\t\tsocket.emit('client ack', {});\n\t\t});\n\t}\n\t$inputMessage.on('keypress', function(e) {\n\t\tisTyping(e);\n\t});\n})\n\nsocket.on('typing', function(data) {\n\tconsole.log('600');\n\t$inputMessage = $('#' + data.roomID);\n\tvar $parent = $inputMessage.parent();\n\tvar $typing = $parent.children(\".typing\");\n\tif (data.isTyping)\n\t\t$typing.append(\"<small>\" + data.person + \" is typing...<small>\");\n\telse\n\t\t$typing.text('');\n})\n\nsocket.on('client ack', function() {\n\tconsole.log('700');\n\t$newUser.pause();\n})\n\nsocket.on('User Disconnected', function(roomID) {\n\tconsole.log('800');\n\t$newUser.pause();\n\t$inputMessage = $('#' + roomID);\n\t$inputMessage.off();\n\tvar $parent = $inputMessage.parent();\n\t$parent.remove();\n})\n\nsocket.on('poke admin', function() {\n\n\t$pokeAdmin.play();\n})\n\nsocket.on('reconnect', function() {\n\tconsole.log('900');\n\tconsole.log(\"Reconnected!\");\n\t$userList.empty();\n\t$('.container').empty();\n\t$errorPage.fadeOut();\n\t$userList.append('<li id=' + username + '>' + username + '</li>');\n\tif (authenticated)\n\t\tsocket.emit('add admin', {\n\t\t\tadmin: username,\n\t\t\tisAdmin: true\n\t\t});\n});\n\nsocket.on('disconnect', function() {\n\tconsole.log('1000');\n\tconsole.log(\"Disconnected!\");\n\t$errorPage.show();\n});\n\nsocket.on('reconnect_failed', function() {\n\tconsole.log('1100');\n\tconsole.log(\"Reconnection Failed!\");\n\tvar $errorMsg = $errorPage.children(\".title\")\n\t$errorMsg.text(\"Reconection Failed. Please refresh your page. \")\n\t$window.alert(\"Disconnected from chat.\")\n});\n\n$passwordInput.keypress(function(event) {\n\tif (event.which === 13)\n\t\tsetUsername();\n});\n\n\n\nfunction sendMessage(id) {\n\t$inputMessage = $('#' + id);\n\tvar $parent = $inputMessage.parent();\n\tvar $messages = $parent.children(\".messages\");\n\tvar message = $inputMessage.val();\n\t// Prevent markup from being injected into the message\n\tmessage = cleanInput(message);\n\t// if there is a non-empty message and a socket connection\n\tif (message && connected) {\n\t\t$inputMessage.val('');\n\t\t// tell server to execute 'new message' and send along one parameter\n\t\tvar time = (\"\" + new Date());\n\t\tconsole.log('1200');\n\t\tsocket.emit('chat message', {\n\t\t\troomID: id,\n\t\t\tmsg: message,\n\t\t\ttimestamp: time\n\t\t});\n\t\tvar $usernameDiv = $('<span class=\"username\"/>').text(\"You\");\n\t\tvar $messageBodyDiv = $('<span class=\"messageBody\">').text(message);\n\t\tvar $timestampDiv = $('<span class=\"timestamp\">').text(time.toLocaleString().substr(15, 6));\n\t\tvar $messageDiv = $('<li class=\"message\"/>').append($usernameDiv, $messageBodyDiv, $timestampDiv);\n\t\t$messages.append($messageDiv);\n\t\t$messages[0].scrollTop = $messages[0].scrollHeight;\n\t}\n}\n\nfunction isTyping(event) {\n\tvar id = event.target.id;\n\tif (event.which !== 13 && event.which !== undefined) {\n\t\tif (typing === false && $('#' + id).is(\":focus\")) {\n\t\t\ttyping = true;\n\t\t\tsocket.emit(\"typing\", {\n\t\t\t\tisTyping: true,\n\t\t\t\troomID: id,\n\t\t\t\tperson: username\n\t\t\t});\n\t\t} else {\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function() {\n\t\t\t\ttimeoutFunction(id);\n\t\t\t}, 2000);\n\t\t}\n\t} else {\n\t\tsendMessage(id);\n\t\tclearTimeout(timeout);\n\t\ttimeoutFunction(id);\n\t}\n}\n\nfunction timeoutFunction(id) {\n\ttyping = false;\n\tsocket.emit(\"typing\", {\n\t\tisTyping: false,\n\t\troomID: id,\n\t\tperson: username\n\t});\n}\n\nfunction adminListListener(target) {\n\t$('#' + target).on('click', function(event) {\n\t\tvar pokeAdmin = event.target.id;\n\t\tsocket.emit('poke admin', pokeAdmin);\n\t});\n}\n\nfunction getChatArea(id) {\n\treturn (\"<div class='chatArea'><div class='chatHeader'></div><ul class='messages'>\" +\n\t\t\"</ul><div class='typing'></div><input class='inputMessage' id='\" + id + \"'' placeholder='Type here...'/></div>\");\n}\n\nfunction setUsername() {\n\tusername = cleanInput($usernameInput.val().trim());\n\tusername = username.toLowerCase();\n\tpassword = $passwordInput.val();\n\tif (username) {\n\t\t// If the username is valid\n\t\tsocket.emit('login', {\n\t\t\tadmin: username,\n\t\t\tpassword: password\n\t\t});\n\t}\n}\n\nfunction notifyAdmin(title, body) {\n\tif (Notification.permission !== \"granted\")\n\t\tNotification.requestPermission();\n\telse {\n\t\tvar notification = new Notification(title, {\n\t\t\ticon: '',\n\t\t\tbody: body,\n\t\t});\n\t\tnotification.onclick = function() {\n\t\t\t$window.focus();\n\t\t\tthis.cancel();\n\t\t}\n\t}\n}\n\n// Prevents input from having injected markup\nfunction cleanInput(input) {\n\treturn $('<div/>').text(input).text();\n}\n;\n"],"sourceRoot":"/"}