)]}'
{"version":3,"sources":["public/js/client.js"],"names":[],"mappingssourcesContent":["// Initialize variables\nvar $window = $(window);\nvar $messages = $('.messages'); //Message area\nvar $inputMessage = $('.inputMessage');  //Text area to input msg\nvar $nameInput = $('.nameInput') //Name input\nvar $phoneInput = $('.phoneInput') //Phone number input\nvar $emailInput = $('.emailInput') //Email input\nvar $form = $('.formArea'); // Details form\nvar $widgetBox = $('.contentArea'); //Widget box\nvar $Input = $('.inputFields'); //Input fields in form\nvar $chatBox = $('.chatArea'); //Chat page after filling form\nvar $Typing = $(\".typing\") //Typing notification\nvar $newMsg = $('.msg_push_new'); //Dummy to push new msgs\nvar $oldMsg = $('.msg_push_old'); //Dummy to push msg history\n\nvar socket = io('/',{transports: ['websocket']}); //io socket\nvar typing = false; //Boolean to check if user is typing\nvar timeout = undefined; //Timeout to monitor typing\nvar id = localStorage.getItem(\"roomID\"); //Room ID in sessionStorage\nvar active = sessionStorage.getItem('active'); //Check if chat has been opened.\n\nif (active && id) {\n\t$form.hide();\n\t$chatBox.show();\n\tconsole.log('100');\n\tsocket.emit('add user', {\n\t\tisNewUser: false,\n\t\troomID: id\n\t});\n\t$widgetBox.show();\n}\n\n$('.msg_head').click(function() {\n\tconsole.log('200');\n\t$widgetBox.slideToggle('slow');\n\tif (id != null && !active) {\n\t\tsocket.emit('add user', {\n\t\t\tisNewUser: false,\n\t\t\troomID: id\n\t\t});\n\t\tconsole.log('new user');\n\t\t$form.hide();\n\t\t$chatBox.show();\n\t\t$inputMessage.focus();\n\t\tsessionStorage.setItem('active', true);\n\t\tactive = true;\n\t}\n});\n\n$Input.submit(function() {\n\tconsole.log('300');\n\tconsole.log('submit');\n\t$form.hide();\n\t$chatBox.show();\n\t$inputMessage.focus();\n\tsessionStorage.setItem('active', true);\n\tconsole.log('new user');\n\tsocket.emit('add user', {\n\t\tisNewUser: true,\n\t\tName: $nameInput.val().trim(),\n\t\tEmail: $emailInput.val().trim(),\n\t\tPhone: $phoneInput.val().trim()\n\t});\n});\n\n$inputMessage.keypress(function(event) {\n\tif (event.which !== 13) {\n\t\tif (typing === false && $inputMessage.is(\":focus\")) {\n\t\t\ttyping = true;\n\t\t\tconsole.log('400');\n\t\t\tsocket.emit(\"typing\", {\n\t\t\t\tisTyping: true,\n\t\t\t\troomID: id,\n\t\t\t\tperson: \"Client\"\n\t\t\t});\n\t\t} else {\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(timeoutFunction, 2000);\n\t\t}\n\t} else {\n\t\tsendMessage();\n\t\tclearTimeout(timeout);\n\t\ttimeoutFunction();\n\t}\n})\n\n$messages.on(\"scroll\", function() {\n\n\tif ($messages.scrollTop() == 0)\n\t\tsocket.emit(\"more messages\", {});\n})\n\nsocket.on('roomID', function(roomID) {\n\tconsole.log('500');\n\tid = roomID;\n\tlocalStorage.setItem(\"roomID\", roomID);\n});\n\nsocket.on('chat message', function(data) {\n\tconsole.log('600');\n\tvar sender;\n\tif (data.isAdmin)\n\t\tsender = \"msg_a\"\n\telse\n\t\tsender = \"msg_b\"\n\tvar $messageBodyDiv = $('<div class=\"' + sender + '\">' + data.msg + '<span class=\"timestamp\">' +\n\t\t((data.timestamp).toLocaleString().substr(15, 6)) + '</span></div>').insertBefore($newMsg);\n\t$messages[0].scrollTop = $messages[0].scrollHeight;\n});\n\nsocket.on('typing', function(data) {\n\tconsole.log('700');\n\tif (data.isTyping && data.person != 'Client')\n\t\t$Typing.append(\"Admin is typing...\");\n\telse\n\t\t$Typing.text('');\n});\n\nsocket.on('chat history', function(data) {\n\tconsole.log('800');\n\tvar len = data.history.length;\n\tfor (var i = len - 1; i >= 0; i--)\n\t\taddMessages(data.history[i], false);\n});\n\nsocket.on('more chat history', function(data) {\n\tconsole.log('900');\n\tvar len = data.history.length;\n\tfor (var i = 0; i < len; i++)\n\t\taddMessages(data.history[i], true);\n});\n\nsocket.on('log message', function(text) {\n\tconsole.log('1000');\n\tvar time = (\"\" + new Date());\n\tvar $messageDiv = $('<div class=\"msg_a\">' + text + '<span class=\"timestamp\">' +\n\t\t(time.toLocaleString().substr(15, 6)) + '</span></div>').insertBefore($newMsg);\n\t$messages[0].scrollTop = $messages[0].scrollHeight;\n});\n\nsocket.on('disconnect', function() {\n\tconsole.log('1100');\n\tlocalStorage.removeItem(\"roomID\");\n\tsessionStorage.removeItem('active');\n\tconsole.log(\"Disconnected!\");\n\t$inputMessage.prop('disabled', true);\n\t$inputMessage.prop('placeholder', \"Connection Lost! Reconnecting..\");\n\n});\n\nsocket.on('reconnect_failed', function() {\n\tconsole.log('1200');\n\tconsole.log(\"Reconnection Failed!\");\n\t$inputMessage.prop('placeholder', \"No active connection. Please refresh page.\");\n});\n\nsocket.on('reconnect', function() {\n\tconsole.log('1300');\n\tsetTimeout(function() {\n\t\tconsole.log(\"Reconnected!\");\n\t\t$inputMessage.prop('disabled', false);\n\t\t$inputMessage.prop('placeholder', \"Type here...\");\n\t\tif (active && id)\n\t\t\tsocket.emit('add user', {\n\t\t\t\tisNewUser: false,\n\t\t\t\troomID: id\n\t\t\t});\n\t}, 4000);\n});\n\nfunction timeoutFunction() {\n\ttyping = false;\n\tsocket.emit(\"typing\", {\n\t\tisTyping: false,\n\t\troomID: id,\n\t\tperson: \"Client\"\n\t});\n}\n\nfunction sendMessage() {\n\tvar message = $inputMessage.val();\n\t// Prevent markup from being injected into the message\n\tmessage = cleanInput(message);\n\t// if there is a non-empty message\n\tif (message) {\n\t\t$inputMessage.val('');\n\t\tvar time = (\"\" + new Date());\n\t\t// tell server to execute 'new message' and send along one parameter\n\t\t//\n\t\tconsole.log('1400');\n\t\tsocket.emit('chat message', {\n\t\t\troomID: \"null\",\n\t\t\tmsg: message,\n\t\t\ttimestamp: time\n\t\t});\n\t\tvar $messageBodyDiv = $('<div class=\"msg_b\">' + message + '<span class=\"timestamp\">' +\n\t\t\t(time.toLocaleString().substr(15, 6)) + '</span></div>').insertBefore($newMsg);\n\t\t$messages[0].scrollTop = $messages[0].scrollHeight;\n\t}\n}\n\nfunction addMessages(data, getMore) {\n\tvar sender;\n\tif (data[\"who\"])\n\t\tsender = \"msg_a\"\n\telse\n\t\tsender = \"msg_b\"\n\tvar $messageBodyDiv = $('<div class=\"' + sender + '\">' + data[\"what\"] + '<span class=\"timestamp\">' +\n\t\t(data[\"when\"]).toLocaleString().substr(15, 6) + '</span></div>');\n\tif (getMore) {\n\t\t$messageBodyDiv.insertAfter($oldMsg);\n\t\t$messages[0].scrollTop += $messageBodyDiv.outerHeight();\n\t} else {\n\t\t$messageBodyDiv.insertBefore($newMsg);\n\t\t$messages[0].scrollTop = $messages[0].scrollHeight;\n\t}\n}\n\n// Prevents input from having injected markup\nfunction cleanInput(input) {\n\treturn $('<div/>').text(input).text();\n}\n;\n"],"sourceRoot":"/"}